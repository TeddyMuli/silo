import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';
import { jwtVerify } from 'jose';

function parseJwt(token: string | null) {
  if (!token) { return; }
  const base64Url = token.split('.')[1];
  const base64 = base64Url.replace('-', '+').replace('_', '/');
  return JSON.parse(window.atob(base64));
}

export async function middleware(request: NextRequest) {
  // Access cookies directly from the request object
  const authToken = request.cookies.get('auth_token');

  console.log("Cookies in request:", request.cookies);
  
  if (!authToken) {
    return NextResponse.redirect(new URL('/login', request.url));
  }

  return NextResponse.next();

  /** 
  try {
    const { payload } = await jwtVerify(authToken, new TextEncoder().encode(process.env.JWT_SECRET!));
    console.log("Token payload: ", payload);
    return NextResponse.next();
  } catch (err) {
    console.error("Error verifying token: ", err);
    return NextResponse.redirect(new URL('/login', request.url));
  }
  */
}

export const config = {
  matcher: [
    '/((?!login|register|public|assets|_next/static|_next/image|favicon.ico).*)',
  ],
}
